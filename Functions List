** Functions required in each Class **

constants.py
	getx_char()						|double	   | DONE
	getk()							|double	   | TODO	|How do we deal with k of epoxy bleeding into fiberglass
	getc_p()						|double	   | DONE
	getT_wall						|double	   | DONE
	gamma							|double    | TODO	|Brandon
flightData.py
	getAlt()						|[int]	   | DONE
	getSpeed()						|[double]  | DONE
	getTime()						|[double]  | DONE
atmos.py
	getRho(alt)						|double    | DONE
	getMu(alt)						|double	   | DONE (check this)
	getT_localstag(alt)					|double	   | TODO	|Eric
						
calc.py
	calc_P_local(A_pmax, P_inf, q, AOA)			|double	   | DONE
	calc_P_infstag(M_inf)					|double	   | DONE
	calc_P_localstag_sub(P_local, P_infstag, M_inf)		|double	   | DONE
	calc_P_localstag_super(P_infstag, M_inf)		|double	   | DONE
	calc_mach_local(P_localstag, P_local)			|double	   | DONE
	calc_T_local(T_localstag, mach_local)			|double	   | TODO	|Eric
	calc_T_recov(recov_fact, mach_local)			|double    | TODO	|Eric
	calc_T_ref(T_local, T_recov,T_wall)			|double	   | DONE	|Brandon
	calc_k_ref(T_ref)					|double	   | TODO**	|Brandon
	calc_h(Nu, k_ref, dist)					|double	   | DONE	|Brandon
	calcTemp(h, area, T_recov, T_wall, T_ref, mass, 	|double	   | DONE	|Saksham
	emmisivity, c_p, dt)
deminsionless.py
	calcRe(rho, mu, speed, x_char)				|double	   | DONE	|Saksham
	calcPr(mu, k, c_p)					|double	   | DONE	|Saksham
	calcNu(Re, Pr, isLaminar)				|double	   | DONE	|Saksham
